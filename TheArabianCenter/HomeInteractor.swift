//
//  HomeInteractor.swift
//  TheArabianCenter
//
//  Created by Ahmed Henawey on 2/18/17.
//  Copyright (c) 2017 Ahmed Henawey. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol HomeInteractorInput
{
    func shareOnFacebook(title:String,description:String, extra: [String:String]? )
    func shareOnTwitter(from viewController: UIViewController,title:String,description:String, extra: [String:String]? )
}

protocol HomeInteractorOutput
{
    func presentShareSucceed(shareResponse:Home.Offer.Share.Response)
    func presentShareError(error: Home.Offer.Share.Error)
}

class HomeInteractor: HomeInteractorInput
{

    var output: HomeInteractorOutput!
    var worker: HomeWorker!
    
    // MARK: - Business logic
    
    //  func doSomething(request: Home.Something.Request)
    //  {
    //    // NOTE: Create some Worker to do the work
    //
    //    worker = HomeWorker()
    //    worker.doSomeWork()
    //
    //    // NOTE: Pass the result to the Presenter
    //
    //    let response = Home.Something.Response()
    //    output.presentSomething(response: response)
    //  }
    
    
    func shareOnTwitter(from viewController: UIViewController,title:String,description:String, extra: [String:String]? ){
        
        worker = HomeWorker()
        
        worker.twitterShare(from: viewController, offerRequest: Home.Offer.Share.Request(title: title, description: description,extra:extra)) { (result) in
            switch result{
            case let .success(shareResponse):
                self.output.presentShareSucceed(shareResponse: shareResponse)
                break
            case let .failure(error):
                self.output.presentShareError(error: error)
                break
            }
        }
    }
    
    func shareOnFacebook(title:String,description:String, extra: [String:String]?){
        // Create Home Worker to do the sharing work
        
        worker = HomeWorker()
        
        worker.facebookShare(offerRequest:  Home.Offer.Share.Request(title: title, description: description,extra : extra)) { (result) in
            switch result{
            case let .success(shareResponse):
                self.output.presentShareSucceed(shareResponse: shareResponse)
                break
            case let .failure(error):
                self.output.presentShareError(error: error)
                break
            }
        }
    }
}
