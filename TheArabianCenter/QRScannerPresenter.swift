//
//  QRScannerPresenter.swift
//  TGTG
//
//  Created by Ahmed Henawey on 1/25/17.
//  Copyright (c) 2017 Ahmed Henawey. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol QRScannerPresenterInput
{
    func presentPreparationDone(response: QRScanner.Prepare.Response)
    func presentScanDone(response: QRScanner.Scan.Response)
    func presentError(error: QRScanner.Error)
}

protocol QRScannerPresenterOutput: class
{
    func displayPreparationDone(viewModel: QRScanner.Prepare.ViewModel)
    func displayScanDone(viewModel: QRScanner.Scan.ViewModel)
    func displayMessage(message: String)
}

class QRScannerPresenter: QRScannerPresenterInput
{
    weak var output: QRScannerPresenterOutput!
    
    // MARK: - Presentation logic
    
    func presentPreparationDone(response: QRScanner.Prepare.Response){
        self.output.displayPreparationDone(viewModel: QRScanner.Prepare.ViewModel())
    }
    func presentScanDone(response: QRScanner.Scan.Response){
        self.output.displayScanDone(viewModel: QRScanner.Scan.ViewModel(value: response.value))
    }
    func presentError(error: QRScanner.Error){
        let message:String
        
        switch error {
            
        case .unableToPrepareScanner:
            message = "Unable to Scan"
            
            self.output.displayMessage(message: message)
        }
    }
}
