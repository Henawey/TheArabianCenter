//
//  HomeModels.swift
//  TheArabianCenter
//
//  Created by Ahmed Henawey on 2/18/17.
//  Copyright (c) 2017 Ahmed Henawey. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import RxSwift

struct Home
{
    struct Offer
    {
        struct Image {
            struct Request {
                var observable: Observable<[String : AnyObject]>
            }
            struct Response {
                var result:[String:AnyObject]
            }
            struct ViewModel {
                var image:UIImage
            }
            
            enum Error:Swift.Error {
                case noImageFound
                case failure(error:Swift.Error)
            }
        }
        struct Share {
            
            struct Request
            {
                var title:String
                var description:String
                var extra:[String:String]?
            }
            struct Response
            {
                var title:String
                var description:String
                var extra:[String:String]?
            }
            
            enum Error:Swift.Error {
                case UnknownError
                case ShareCancelled
                case ConfigurationMissing
                case failure(error:Swift.Error)
            }
        }
        struct Request
        {
        }
        struct Response
        {
            var id:String?
        }
        struct ViewModel
        {
            var id:String
            var title:String
            var description:String
        }
    }
    enum Language : String{
        
        case Arabic = "ar"
        case English = "en"
        
        var semanticContentAttribute:UISemanticContentAttribute{
            get{
                switch self {
                case .Arabic:
                    return .forceRightToLeft
                case .English:
                    return .forceLeftToRight
                }
            }
        }
        struct Request {
            var language:Language
        }
        
    }
    enum Error:Swift.Error {
        case failure(error:Swift.Error)
    }
    
}
