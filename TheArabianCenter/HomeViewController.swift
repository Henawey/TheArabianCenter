//
//  HomeViewController.swift
//  TheArabianCenter
//
//  Created by Ahmed Henawey on 2/18/17.
//  Copyright (c) 2017 Ahmed Henawey. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import RxCocoa
import RxSwift

protocol HomeViewControllerInput
{
    func displayShareSuccess(viewModel: Home.Offer.ViewModel)
    func displayCameraImage(viewModel:Home.Offer.Image.ViewModel)
    func displayMessage(title: String, message:String,actionTitle:String)
}

protocol HomeViewControllerOutput
{
    func handleCameraResult(request:Home.Offer.Image.Request)
    func shareOnFacebook(title:String,description:String, extra: [String:String]? )
    func shareOnTwitter(from viewController: UIViewController,title:String,description:String, extra: [String:String]? )
    func changeLanguage(request: Home.Language.Request)
}

//only to support default value for parameter 'extra' as it not permited in protocal
extension HomeViewControllerOutput{
    func shareOnFacebook(title:String,description:String, extra: [String:String]? = nil){
        shareOnFacebook(title: title, description: description, extra: extra)
    }
    func shareOnTwitter(from viewController: UIViewController,title:String,description:String, extra: [String:String]? = nil){
        shareOnTwitter(from: viewController, title: title, description: description, extra: extra)
    }
}


class HomeViewController: UIViewController, HomeViewControllerInput
{
    var output: HomeViewControllerOutput!
    var router: HomeRouter!
    var disposeBag = DisposeBag()
    
    // MARK: - Object lifecycle
    
    override func awakeFromNib()
    {
        super.awakeFromNib()
        HomeConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
    }
    
    // MARK: - Event handling
    
    @IBAction func facebookShare(){
        self.output.shareOnFacebook(title: "Test Title", description: "Test Description",extra:["id":"1234"])
    }
    
    @IBAction func twitterShare(){
        self.output.shareOnTwitter(from: self, title: "Test Title", description: "Test Description",extra:["id":"1234"])
    }
    
    @IBAction func openCamera(){
        let picker = UIImagePickerController()
        picker.sourceType = .camera
        
        
        self.output.handleCameraResult(request: Home.Offer.Image.Request(observable :picker.rx.didFinishPickingMediaWithInfo))
        
        picker.rx.didFinishPickingMediaWithInfo.subscribe({ (event) in
            picker.dismiss(animated: true, completion: nil)
        }).addDisposableTo(disposeBag)
        
        self.present(picker, animated: true, completion: nil)
    }
    
    @IBAction func changeLanguage(){
        let currentLanguage = UserDefaults.standard.stringArray(forKey: "CurrentLanguage")?.first
        
        if currentLanguage == "en"{
            let request = Home.Language.Request(language: Home.Language.Arabic)
            self.output.changeLanguage(request: request)
            UserDefaults.standard.set([Home.Language.Arabic.rawValue], forKey: "CurrentLanguage")
        }else{
            self.output.changeLanguage(request: Home.Language.Request(language: Home.Language.English))
            UserDefaults.standard.set([Home.Language.English.rawValue], forKey: "CurrentLanguage")
        }
        UserDefaults.standard.synchronize()
    }
    
    
    
    // MARK: - Display logic
    
    func displayShareSuccess(viewModel: Home.Offer.ViewModel) {
        // NOTE: Display the result from the Presenter
    }
    
    func displayMessage(title: String, message:String,actionTitle:String) {
        // NOTE: Display the result from the Presenter
        let alertController = UIAlertController(title: title, message: message, preferredStyle: .alert)
        alertController.addAction(UIAlertAction(title: actionTitle, style: .destructive, handler: nil))
        self.present(alertController, animated: true, completion: nil)
    }
    
    func displayCameraImage(viewModel: Home.Offer.Image.ViewModel) {
        
    }
}
